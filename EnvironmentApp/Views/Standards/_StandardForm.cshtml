@model EnvironmentApp.Models.Standard
@using EnvironmentApp.Classes;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.sName, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sName, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Application.appEnvName, "Environment Name", htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.DropDownListFor(model => model.Application.appCode, new SelectList(DropDowns.AppList(), "Value", "Text"), "--Select--", htmlAttributes: new { @id = "ddlApps", @class = "form-control col-md-12", style = "height: 45px;" })
                    @Html.ValidationMessageFor(model => model.appCode, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sType, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sType, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sType, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sDescription, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sDescription, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sDescription, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sVCPU, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sVCPU, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sVCPU, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sRAM, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sRAM, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sRAM, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.sIP, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sIP, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sIP, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sOS, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sOS, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sOS, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sSize, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sSize, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sSize, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sSQLVers, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.EditorFor(model => model.sSQLVers, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.sSQLVers, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sNotes, htmlAttributes: new { @class = "control-label col-md-6" })
                    @Html.TextAreaFor(model => model.sNotes, new { @class = "form-control col-md-12" })
                    @Html.ValidationMessageFor(model => model.sNotes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-primary btn shadow" style = "border-radius: 25px" />
                </div>
            </div>
        </div>

        
    </div>
}
    <hr />
<div>
    @Html.ActionLink("Back to List >>", "Index", null, new { @class = "btn btn-outline-primary btn-sm shadow", style = "border-radius: 25px" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}