@using EnvironmentApp.Classes;
@model EnvironmentApp.Models.Application

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Add New Application</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="col-sm-6">
                <h4>Identification:</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.appEnvName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appEnvName, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appEnvName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appName, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appPhase, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appPhase, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appPhase, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appOU, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appOU, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appOU, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appPool, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appPool, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appPool, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <h4>Ownership:</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.appPOC, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appPOC, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appPOC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appOwner, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appOwner, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appOwner, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.appSnowTeam, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.appSnowTeam, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                        @Html.ValidationMessageFor(model => model.appSnowTeam, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-outline-primary btn shadow">
                <span><i class="fa fa-download"></i></span>
                Save
            </button>
            @*<input type="submit" value="Save" class="btn btn-outline-primary btn shadow" />*@
        </div>
    </div>
}
<hr />
<div>
    @Html.ActionLink("Back to List >>", "Index", null, new { @class = "btn btn-outline-primary btn-sm shadow" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
